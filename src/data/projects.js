const projects = [
  {
    title: 'MITI',
    description: 'An innovative music production platform with AI-powered suggestions and real-time collaboration.',
    tech: ['React', 'Vite', 'CanvasJS', 'Metas Llama LLM', 'Convex', 'Clerk', 'SunoAI'],
    github: 'https://github.com/AkshayG99/miti',
    demo: '',
    dates: '2024',
    role: 'Full Stack Developer',
    tools: ['React', 'Vite', 'CanvasJS', 'Meta’s Llama LLM', 'Convex', 'Clerk', 'SunoAI'],
    fullDescription: 'Developed MITI, a music production platform that leverages AI for real-time collaboration and intelligent suggestions. Utilized React and CanvasJS for musical note placement, with features like drag, zoom, and keyboard shortcuts. Engineered prompts for Llama to ensure AI suggestions are automatically implemented into the user’s song. Built an authenticated sign-in system and synchronized backend user states for real-time collaboration. Implemented a JSON to MIDI conversion algorithm and integrated a music player for user compositions.',
    features: [
      'AI-powered music suggestions',
      'Real-time collaboration with backend state sync',
      'Musical note placement with drag, zoom, and keyboard shortcuts',
      'Prompt engineering for Llama LLM',
      'Authenticated sign-in system',
      'JSON to MIDI conversion and music player integration',
    ],
    screenshots: [],
  },
  {
    title: 'StockSee',
    description: 'A platform to visually depict the correlation between real-world events and stock prices.',
    tech: ['Next.js', 'React', 'Google Gemini LLM', 'Yahoo Finance', 'Python', 'Flask'],
    github: 'https://github.com/AkshayG99/StockSee',
    demo: '',
    dates: '',
    role: 'Full Stack Developer',
    tools: ['Next.js', 'React', 'Google Gemini LLM', 'Yahoo Finance', 'Python', 'Flask'],
    fullDescription: 'Created StockSee to visualize the relationship between real-world events and stock price movements. Utilized Yahoo Finance API and Flask to display real-time stock data on interactive graphs (Chart.js + React). Developed a JavaScript algorithm to identify and mark significant high/low points, and integrated Google Gemini LLM to correlate these points with relevant news and industry shifts.',
    features: [
      'Real-time stock data visualization',
      'Interactive graph with significant point marking',
      'Correlation of stock movements with real-world news using Gemini LLM',
      'Backend with Flask and Yahoo Finance API',
    ],
    screenshots: [],
  },
  {
    title: 'QuantRL - Stock Trading Bot',
    description: 'A Deep Reinforcement Learning-based stock trading bot with real-time analytics.',
    tech: ['TensorFlow', 'Flask', 'React', 'Node.js', 'Python', 'TypeScript', 'Numpy', 'Pandas', 'SciKit Learn'],
    github: 'https://github.com/AkshayG99/QuantRL-Trading-Bot',
    demo: '',
    dates: '',
    role: 'Machine Learning Engineer & Full Stack Developer',
    tools: ['TensorFlow', 'Flask', 'React', 'Node.js', 'Python', 'TypeScript', 'Numpy', 'Pandas', 'SciKit Learn'],
    fullDescription: 'Developed QuantRL, a stock trading bot using Deep Reinforcement Learning to predict estimated returns and make buy/sell/hold decisions. Created a virtual trading environment achieving average returns of 20%. Built a Node.js and React frontend for real-time trade and price visualization, with a Flask backend for model inference and data processing.',
    features: [
      'Deep RL model for stock trading',
      'Virtual trading environment with buy/sell/hold actions',
      'Average 20% returns in simulation',
      'Real-time analytics dashboard (Node.js + React)',
      'Flask backend for ML inference',
    ],
    screenshots: [],
  },
  {
    title: 'ShopFit',
    description: 'A personalized outfit builder built as a Shopify Shop Mini that helps users mix and match tops and bottoms in real time, discover their unique style through a style quiz, and visualize outfits using AI-powered virtual try-on.',
    tech: ['React', 'TypeScript', 'Tailwind CSS', 'shop-minis-react SDK', 'Fal.ai'],
    github: '',
    demo: 'https://youtu.be/Q2KbmuU6kZI',
    dates: '2024',
    role: 'Full Stack Developer',
    tools: ['React', 'TypeScript', 'Tailwind CSS', 'shop-minis-react SDK', 'Fal.ai client'],
    fullDescription: 'Developed ShopFit, a personalized outfit builder built as a Shopify Shop Mini that innovates online fashion shopping. The platform solves three major problems: Style Discovery through a style quiz, Outfit Matching by removing guesswork of pairing clothes, and Visualization Before Purchase using AI-powered virtual try-on with both photo and video formats. Features include search for products with themes, style quiz for tailored recommendations, virtual try-on with FAL AI, save fits between sessions, share fits, budget management, filter/shuffle products, and add to cart functionality. Built with React, TypeScript, Tailwind CSS, and advanced APIs, ShopFit makes online shopping more personal, visual, and fun.',
    features: [
      'AI-powered virtual try-on with photo and video formats',
      'Style quiz for personalized recommendations',
      'Real-time outfit mixing and matching',
      'Save fits between sessions using Shopify async storage',
      'Shareable outfit links',
      'Budget management and themed product browsing',
      'Filter and shuffle products',
      'Add to cart functionality',
    ],
    screenshots: [],
  },
  {
    title: 'Breast Cancer Classification',
    description: 'A machine learning project applying linear classification to predict breast cancer presence using diagnostic features.',
    tech: ['Python', 'TensorFlow'],
    github: 'https://colab.research.google.com/drive/1Ww5a6xcJuKgIb3x4H4b1nk1VtiM9nMWY?usp=drive_link',
    demo: '',
    dates: '',
    role: 'Machine Learning Engineer',
    tools: ['Python', 'TensorFlow'],
    fullDescription: 'The Breast Cancer Classification model is a machine learning project that applies linear classification techniques to predict the presence of breast cancer based on diagnostic features. Using Python and TensorFlow, I developed a linear classifier to distinguish between malignant and benign breast cancer cases. The project involves preprocessing the breast cancer dataset, training a linear classification model, and evaluating its performance with metrics such as accuracy, precision, and recall. This project highlights my skills in implementing and fine-tuning classification models, showcasing my proficiency in machine learning and Python programming.',
    features: [
      'Preprocessing of breast cancer diagnostic dataset',
      'Linear classification model for binary prediction',
      'Evaluation using accuracy, precision, and recall',
      'Implementation in Python with TensorFlow',
    ],
    screenshots: [],
  },
  {
    title: 'Jain Community Services',
    description: 'A website for Jain Community Services, providing resources, event information, and support for the Jain community.',
    tech: ['HTML', 'CSS', 'JavaScript'],
    github: 'https://github.com/AkshayG99/JCSC.github.io',
    demo: '',
    dates: '',
    role: 'Frontend Developer',
    tools: ['HTML', 'CSS', 'JavaScript'],
    fullDescription: 'The website for Jain Community Services was developed using HTML, CSS, and JavaScript to provide an accessible and user-friendly platform for community engagement. It features a range of resources, event information, and support services tailored to the needs of the Jain community. The design emphasizes clarity and ease of navigation, ensuring users can easily find the information they need.',
    features: [
      'Accessible and user-friendly platform',
      'Community resources and event information',
      'Support services for the Jain community',
      'Emphasis on clarity and ease of navigation',
    ],
    screenshots: [],
  },
  {
    title: 'Workout Buddy',
    description: 'A full-stack fitness tracking app built with the MERN stack and Postman API for managing workouts and progress.',
    tech: ['MongoDB', 'Express.js', 'React', 'Node.js', 'Postman API'],
    github: 'https://github.com/AkshayG99/workout-buddy',
    demo: '',
    dates: '',
    role: 'Full Stack Developer',
    tools: ['MongoDB', 'Express.js', 'React', 'Node.js', 'Postman API'],
    fullDescription: 'Workout Buddy is a full-stack fitness tracking application developed using the MERN stack (MongoDB, Express.js, React, Node.js) and Postman API. The platform allows users to log workouts, track progress, and manage fitness goals. It features user authentication, CRUD operations for workouts, and a responsive UI for seamless user experience. The backend API is tested and documented with Postman, ensuring robust and reliable endpoints.',
    features: [
      'User authentication and session management',
      'CRUD operations for workouts and progress tracking',
      'Responsive and intuitive React frontend',
      'RESTful API with Express.js and MongoDB',
      'API testing and documentation with Postman',
    ],
    screenshots: [],
  },
];

export default projects;